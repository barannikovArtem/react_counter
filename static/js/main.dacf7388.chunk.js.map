{"version":3,"sources":["App.tsx","index.tsx"],"names":["colors","id","color","hex","App","state","counter","index","addOne","setState","add100","increase","setTimeout","this","className","style","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0NAGMA,EAAS,CACb,CAAEC,GAAI,EAAGC,MAAO,SAAUC,IAAK,WAC/B,CAAEF,GAAI,EAAGC,MAAO,SAAUC,IAAK,WAC/B,CAAEF,GAAI,EAAGC,MAAO,MAAOC,IAAK,YAQxBC,E,4MACJC,MAAQ,CACNC,QAAS,EACTC,MAAO,G,EAeTC,OAAS,WACP,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,QAASD,EAAMC,QAAU,O,EAI7BI,OAAS,WACP,EAAKD,UAAS,SAACJ,GAAD,MAAY,CACxBC,QAASD,EAAMC,QAAU,S,EAI7BK,SAAW,WACT,EAAKH,SACD,EAAKH,MAAMC,QAAU,IAAM,GAA4B,IAAvB,EAAKD,MAAMC,SAC7C,EAAKI,U,wDA3BT,WAAsB,IAAD,OACnBE,YAAW,WACL,EAAKP,MAAMC,QAAU,IACvB,EAAKG,SAAS,CAAEF,MAAO,IAGrB,EAAKF,MAAMC,QAAU,KACvB,EAAKG,SAAS,CAAEF,MAAO,MAExB,O,oBAsBL,WACE,MAA2BM,KAAKR,MAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAEjB,OACE,qCACE,qBAAIO,UAAU,UAAUC,MAAO,CAAEb,MAAOF,EAAOO,GAAOJ,KAAtD,mBAEGG,KAEH,sBAAKQ,UAAU,UAAf,UACE,wBACEE,KAAK,SACLF,UAAU,kBACVG,QAASJ,KAAKL,OAHhB,mBAOA,wBACEQ,KAAK,SACLF,UAAU,kBACVG,QAASJ,KAAKH,OAHhB,qBAOA,wBACEM,KAAK,SACLF,UAAU,kBACVG,QAASJ,KAAKF,SAHhB,oC,GA7DQO,IAAMC,WA0ETf,ICrFfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dacf7388.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst colors = [\n  { id: 1, color: 'yellow', hex: '#FFFF00' },\n  { id: 2, color: 'orange', hex: '#FFA500' },\n  { id: 3, color: 'red', hex: '#FF0000' },\n];\n\ninterface State {\n  counter: number,\n  index: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    counter: 0,\n    index: 0,\n  };\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      if (this.state.counter > 99) {\n        this.setState({ index: 1 });\n      }\n\n      if (this.state.counter > 199) {\n        this.setState({ index: 2 });\n      }\n    }, 100);\n  }\n\n  addOne = () => {\n    this.setState((state) => ({\n      counter: state.counter + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((state) => ({\n      counter: state.counter + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n    if (this.state.counter % 5 === 0 && this.state.counter !== 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    const { counter, index } = this.state;\n\n    return (\n      <>\n        <h1 className=\"counter\" style={{ color: colors[index].hex }}>\n          Count:\n          {counter}\n        </h1>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={this.addOne}\n          >\n            Add 1\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={this.add100}\n          >\n            Add 100\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={this.increase}\n          >\n            Add 1 or 101\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}